{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\hackathon\\\\CODERECET\\\\frontend\\\\src\\\\Analytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Line, Doughnut, Bar } from 'react-chartjs-2';\nimport { useNavigate } from 'react-router-dom';\nimport 'chart.js/auto';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:5000/api';\nexport default function Analytics() {\n  _s();\n  const navigate = useNavigate();\n  const [range, setRange] = useState('24h');\n  const [sensorData, setSensorData] = useState({\n    sensor1: null,\n    sensor2: null,\n    sensor3: null,\n    leak_confirmed: false,\n    burst_confirmed: false,\n    leak_location: null,\n    confidence: 0,\n    burst_type: 'NORMAL FLOW',\n    burst_intensity: 0\n  });\n  const [history, setHistory] = useState([]);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const intervalRef = useRef();\n\n  // Fetch latest sensor data and history\n  const fetchData = async () => {\n    try {\n      const statusRes = await fetch(`${API_BASE}/status`);\n      const statusData = await statusRes.json();\n      setSensorData(statusData);\n      setLastUpdated(statusData.timestamp);\n      const historyRes = await fetch(`${API_BASE}/history`);\n      const historyData = await historyRes.json();\n      setHistory(historyData);\n    } catch (err) {\n      console.error('Error fetching analytics data:', err);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    intervalRef.current = setInterval(fetchData, 2000);\n    return () => clearInterval(intervalRef.current);\n  }, []);\n\n  // Calculate statistics from real data\n  const calculateStats = () => {\n    if (history.length === 0) return {\n      avg: 0,\n      peak: 0,\n      alertRate: 0,\n      total: 0\n    };\n    const allValues = history.flatMap(item => [item.sensor1, item.sensor2, item.sensor3]).filter(val => val >= 0);\n    const avg = Math.round(allValues.reduce((sum, val) => sum + val, 0) / allValues.length);\n    const peak = Math.max(...allValues);\n    const alertCount = history.filter(item => item.leak_confirmed || item.burst_confirmed).length;\n    const alertRate = Math.round(alertCount / history.length * 100);\n    return {\n      avg,\n      peak,\n      alertRate,\n      total: history.length\n    };\n  };\n  const stats = calculateStats();\n\n  // Prepare status distribution from real data\n  const getStatusDistribution = () => {\n    if (history.length === 0) return {\n      labels: ['Normal'],\n      datasets: [{\n        data: [1],\n        backgroundColor: ['#00ffb3'],\n        borderWidth: 0\n      }]\n    };\n    const normal = history.filter(item => !item.leak_confirmed && !item.burst_confirmed).length;\n    const leak = history.filter(item => item.leak_confirmed && !item.burst_confirmed).length;\n    const burst = history.filter(item => item.burst_confirmed).length;\n    return {\n      labels: ['Normal', 'Leak Detected', 'Major Burst'],\n      datasets: [{\n        data: [normal, leak, burst],\n        backgroundColor: ['#00ffb3', '#ffd700', '#ff005c'],\n        borderWidth: 0\n      }]\n    };\n  };\n\n  // Prepare hourly averages from real data\n  const getHourlyAverages = () => {\n    if (history.length === 0) return {\n      labels: [],\n      datasets: [{\n        label: 'Avg Value',\n        data: [],\n        backgroundColor: '#00fff7',\n        borderRadius: 8\n      }]\n    };\n    const hourlyData = {};\n    history.forEach(item => {\n      const hour = new Date(item.timestamp).getHours();\n      if (!hourlyData[hour]) hourlyData[hour] = [];\n      hourlyData[hour].push(item.sensor1, item.sensor2, item.sensor3);\n    });\n    const labels = Object.keys(hourlyData).sort((a, b) => a - b).map(hour => `${hour}:00`);\n    const data = Object.keys(hourlyData).sort((a, b) => a - b).map(hour => {\n      const values = hourlyData[hour].filter(val => val >= 0);\n      return values.length > 0 ? Math.round(values.reduce((sum, val) => sum + val, 0) / values.length) : 0;\n    });\n    return {\n      labels,\n      datasets: [{\n        label: 'Avg Value',\n        data,\n        backgroundColor: '#00fff7',\n        borderRadius: 8\n      }]\n    };\n  };\n\n  // Get alert history from real data\n  const getAlertHistory = () => {\n    return history.filter(item => item.leak_confirmed || item.burst_confirmed).map(item => ({\n      type: item.burst_confirmed ? 'Major Burst' : 'Leak Detected',\n      value: Math.max(item.sensor1, item.sensor2, item.sensor3),\n      time: new Date(item.timestamp).toLocaleTimeString(),\n      level: item.burst_confirmed ? 'HIGH' : 'MEDIUM'\n    })).slice(-5); // Last 5 alerts\n  };\n  const lineData = {\n    labels: history.slice(-100).map(item => new Date(item.timestamp).toLocaleTimeString()),\n    datasets: [{\n      label: 'Sensor 1',\n      data: history.slice(-100).map(item => item.sensor1),\n      borderColor: '#00fff7',\n      backgroundColor: 'rgba(0,255,247,0.1)',\n      pointBackgroundColor: history.slice(-100).map(item => item.burst_confirmed ? '#ff005c' : '#00fff7'),\n      pointRadius: history.slice(-100).map(item => item.burst_confirmed ? 5 : 2),\n      tension: 0.2\n    }, {\n      label: 'Sensor 2',\n      data: history.slice(-100).map(item => item.sensor2),\n      borderColor: '#ffd700',\n      backgroundColor: 'rgba(255,215,0,0.1)',\n      pointBackgroundColor: history.slice(-100).map(item => item.burst_confirmed ? '#ff005c' : '#ffd700'),\n      pointRadius: history.slice(-100).map(item => item.burst_confirmed ? 5 : 2),\n      tension: 0.2\n    }, {\n      label: 'Sensor 3',\n      data: history.slice(-100).map(item => item.sensor3),\n      borderColor: '#ff8c00',\n      backgroundColor: 'rgba(255,140,0,0.1)',\n      pointBackgroundColor: history.slice(-100).map(item => item.burst_confirmed ? '#ff005c' : '#ff8c00'),\n      pointRadius: history.slice(-100).map(item => item.burst_confirmed ? 5 : 2),\n      tension: 0.2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-bg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: () => navigate('/'),\n        children: \"\\u2190 Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"analytics-title\",\n        children: \"Detailed Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"analytics-btn\",\n          onClick: fetchData,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"analytics-btn\",\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: range,\n        onChange: e => setRange(e.target.value),\n        className: \"analytics-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"24h\",\n          children: \"Last 24 Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"7d\",\n          children: \"Last 7 Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"30d\",\n          children: \"Last 30 Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"analytics-meta\",\n        children: [stats.total, \" readings - Last update: \", lastUpdated ? new Date(lastUpdated).toLocaleString() : 'Loading...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-stats-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.avg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Average Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.peak\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Peak Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: [stats.alertRate, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Alert Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Total Readings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-main-graph\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-graph-title\",\n        children: \"Sensor Value Timeline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: lineData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              labels: {\n                color: '#00fff7'\n              }\n            }\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Time',\n                color: '#00fff7'\n              },\n              ticks: {\n                color: '#b0eaff'\n              },\n              grid: {\n                color: 'rgba(0,255,247,0.1)'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: 'Sensor Value',\n                color: '#00fff7'\n              },\n              ticks: {\n                color: '#b0eaff'\n              },\n              grid: {\n                color: 'rgba(0,255,247,0.1)'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-bottom-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-pie\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analytics-graph-title\",\n          children: \"Status Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: getStatusDistribution(),\n          options: {\n            plugins: {\n              legend: {\n                labels: {\n                  color: '#00fff7',\n                  font: {\n                    size: 14\n                  }\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analytics-graph-title\",\n          children: \"Hourly Average Values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: getHourlyAverages(),\n          options: {\n            plugins: {\n              legend: {\n                display: false\n              }\n            },\n            scales: {\n              x: {\n                title: {\n                  display: true,\n                  text: 'Hour of Day',\n                  color: '#00fff7'\n                },\n                ticks: {\n                  color: '#b0eaff'\n                },\n                grid: {\n                  color: 'rgba(0,255,247,0.1)'\n                }\n              },\n              y: {\n                title: {\n                  display: true,\n                  text: 'Avg Value',\n                  color: '#00fff7'\n                },\n                ticks: {\n                  color: '#b0eaff'\n                },\n                grid: {\n                  color: 'rgba(0,255,247,0.1)'\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-alert-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-graph-title\",\n        children: \"Alert History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), getAlertHistory().map((alert, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-alert-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"alert-type\",\n          children: alert.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"alert-value\",\n          children: [\"Value: \", alert.value, \" - \", alert.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `alert-level ${alert.level.toLowerCase()}`,\n          children: alert.level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)), getAlertHistory().length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-alert-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"alert-type\",\n          children: \"No alerts yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"alert-value\",\n          children: \"System monitoring normally\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(Analytics, \"V1gxWGO+RXkkXjc6C2fsxU2H32o=\", false, function () {\n  return [useNavigate];\n});\n_c = Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Line","Doughnut","Bar","useNavigate","jsxDEV","_jsxDEV","API_BASE","Analytics","_s","navigate","range","setRange","sensorData","setSensorData","sensor1","sensor2","sensor3","leak_confirmed","burst_confirmed","leak_location","confidence","burst_type","burst_intensity","history","setHistory","lastUpdated","setLastUpdated","intervalRef","fetchData","statusRes","fetch","statusData","json","timestamp","historyRes","historyData","err","console","error","current","setInterval","clearInterval","calculateStats","length","avg","peak","alertRate","total","allValues","flatMap","item","filter","val","Math","round","reduce","sum","max","alertCount","stats","getStatusDistribution","labels","datasets","data","backgroundColor","borderWidth","normal","leak","burst","getHourlyAverages","label","borderRadius","hourlyData","forEach","hour","Date","getHours","push","Object","keys","sort","a","b","map","values","getAlertHistory","type","value","time","toLocaleTimeString","level","slice","lineData","borderColor","pointBackgroundColor","pointRadius","tension","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","toLocaleString","options","responsive","plugins","legend","color","scales","x","title","display","text","ticks","grid","y","font","size","alert","i","toLowerCase","_c","$RefreshReg$"],"sources":["D:/code/hackathon/CODERECET/frontend/src/Analytics.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Line, Doughnut, Bar } from 'react-chartjs-2';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport 'chart.js/auto';\r\nimport './App.css';\r\n\r\nconst API_BASE = 'http://localhost:5000/api';\r\n\r\nexport default function Analytics() {\r\n  const navigate = useNavigate();\r\n  const [range, setRange] = useState('24h');\r\n  const [sensorData, setSensorData] = useState({\r\n    sensor1: null,\r\n    sensor2: null,\r\n    sensor3: null,\r\n    leak_confirmed: false,\r\n    burst_confirmed: false,\r\n    leak_location: null,\r\n    confidence: 0,\r\n    burst_type: 'NORMAL FLOW',\r\n    burst_intensity: 0\r\n  });\r\n  const [history, setHistory] = useState([]);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n  const intervalRef = useRef();\r\n\r\n  // Fetch latest sensor data and history\r\n  const fetchData = async () => {\r\n    try {\r\n      const statusRes = await fetch(`${API_BASE}/status`);\r\n      const statusData = await statusRes.json();\r\n      setSensorData(statusData);\r\n      setLastUpdated(statusData.timestamp);\r\n\r\n      const historyRes = await fetch(`${API_BASE}/history`);\r\n      const historyData = await historyRes.json();\r\n      setHistory(historyData);\r\n    } catch (err) {\r\n      console.error('Error fetching analytics data:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    intervalRef.current = setInterval(fetchData, 2000);\r\n    return () => clearInterval(intervalRef.current);\r\n  }, []);\r\n\r\n  // Calculate statistics from real data\r\n  const calculateStats = () => {\r\n    if (history.length === 0) return { avg: 0, peak: 0, alertRate: 0, total: 0 };\r\n    \r\n    const allValues = history.flatMap(item => [item.sensor1, item.sensor2, item.sensor3]).filter(val => val >= 0);\r\n    const avg = Math.round(allValues.reduce((sum, val) => sum + val, 0) / allValues.length);\r\n    const peak = Math.max(...allValues);\r\n    const alertCount = history.filter(item => item.leak_confirmed || item.burst_confirmed).length;\r\n    const alertRate = Math.round((alertCount / history.length) * 100);\r\n    \r\n    return { avg, peak, alertRate, total: history.length };\r\n  };\r\n\r\n  const stats = calculateStats();\r\n\r\n  // Prepare status distribution from real data\r\n  const getStatusDistribution = () => {\r\n    if (history.length === 0) return { labels: ['Normal'], datasets: [{ data: [1], backgroundColor: ['#00ffb3'], borderWidth: 0 }] };\r\n    \r\n    const normal = history.filter(item => !item.leak_confirmed && !item.burst_confirmed).length;\r\n    const leak = history.filter(item => item.leak_confirmed && !item.burst_confirmed).length;\r\n    const burst = history.filter(item => item.burst_confirmed).length;\r\n    \r\n    return {\r\n      labels: ['Normal', 'Leak Detected', 'Major Burst'],\r\n      datasets: [{\r\n        data: [normal, leak, burst],\r\n        backgroundColor: ['#00ffb3', '#ffd700', '#ff005c'],\r\n        borderWidth: 0,\r\n      }],\r\n    };\r\n  };\r\n\r\n  // Prepare hourly averages from real data\r\n  const getHourlyAverages = () => {\r\n    if (history.length === 0) return { labels: [], datasets: [{ label: 'Avg Value', data: [], backgroundColor: '#00fff7', borderRadius: 8 }] };\r\n    \r\n    const hourlyData = {};\r\n    history.forEach(item => {\r\n      const hour = new Date(item.timestamp).getHours();\r\n      if (!hourlyData[hour]) hourlyData[hour] = [];\r\n      hourlyData[hour].push(item.sensor1, item.sensor2, item.sensor3);\r\n    });\r\n    \r\n    const labels = Object.keys(hourlyData).sort((a, b) => a - b).map(hour => `${hour}:00`);\r\n    const data = Object.keys(hourlyData).sort((a, b) => a - b).map(hour => {\r\n      const values = hourlyData[hour].filter(val => val >= 0);\r\n      return values.length > 0 ? Math.round(values.reduce((sum, val) => sum + val, 0) / values.length) : 0;\r\n    });\r\n    \r\n    return {\r\n      labels,\r\n      datasets: [{\r\n        label: 'Avg Value',\r\n        data,\r\n        backgroundColor: '#00fff7',\r\n        borderRadius: 8,\r\n      }],\r\n    };\r\n  };\r\n\r\n  // Get alert history from real data\r\n  const getAlertHistory = () => {\r\n    return history\r\n      .filter(item => item.leak_confirmed || item.burst_confirmed)\r\n      .map(item => ({\r\n        type: item.burst_confirmed ? 'Major Burst' : 'Leak Detected',\r\n        value: Math.max(item.sensor1, item.sensor2, item.sensor3),\r\n        time: new Date(item.timestamp).toLocaleTimeString(),\r\n        level: item.burst_confirmed ? 'HIGH' : 'MEDIUM',\r\n      }))\r\n      .slice(-5); // Last 5 alerts\r\n  };\r\n\r\n  const lineData = {\r\n    labels: history.slice(-100).map(item => new Date(item.timestamp).toLocaleTimeString()),\r\n    datasets: [\r\n      {\r\n        label: 'Sensor 1',\r\n        data: history.slice(-100).map(item => item.sensor1),\r\n        borderColor: '#00fff7',\r\n        backgroundColor: 'rgba(0,255,247,0.1)',\r\n        pointBackgroundColor: history.slice(-100).map(item => item.burst_confirmed ? '#ff005c' : '#00fff7'),\r\n        pointRadius: history.slice(-100).map(item => item.burst_confirmed ? 5 : 2),\r\n        tension: 0.2,\r\n      },\r\n      {\r\n        label: 'Sensor 2',\r\n        data: history.slice(-100).map(item => item.sensor2),\r\n        borderColor: '#ffd700',\r\n        backgroundColor: 'rgba(255,215,0,0.1)',\r\n        pointBackgroundColor: history.slice(-100).map(item => item.burst_confirmed ? '#ff005c' : '#ffd700'),\r\n        pointRadius: history.slice(-100).map(item => item.burst_confirmed ? 5 : 2),\r\n        tension: 0.2,\r\n      },\r\n      {\r\n        label: 'Sensor 3',\r\n        data: history.slice(-100).map(item => item.sensor3),\r\n        borderColor: '#ff8c00',\r\n        backgroundColor: 'rgba(255,140,0,0.1)',\r\n        pointBackgroundColor: history.slice(-100).map(item => item.burst_confirmed ? '#ff005c' : '#ff8c00'),\r\n        pointRadius: history.slice(-100).map(item => item.burst_confirmed ? 5 : 2),\r\n        tension: 0.2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"analytics-bg\">\r\n      <div className=\"analytics-header\">\r\n        <button className=\"back-btn\" onClick={() => navigate('/')}>&larr; Back to Dashboard</button>\r\n        <h1 className=\"analytics-title\">Detailed Analytics</h1>\r\n        <div className=\"analytics-actions\">\r\n          <button className=\"analytics-btn\" onClick={fetchData}>Refresh</button>\r\n          <button className=\"analytics-btn\">Export</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"analytics-controls\">\r\n        <select value={range} onChange={e => setRange(e.target.value)} className=\"analytics-select\">\r\n          <option value=\"24h\">Last 24 Hours</option>\r\n          <option value=\"7d\">Last 7 Days</option>\r\n          <option value=\"30d\">Last 30 Days</option>\r\n        </select>\r\n        <span className=\"analytics-meta\">{stats.total} readings - Last update: {lastUpdated ? new Date(lastUpdated).toLocaleString() : 'Loading...'}</span>\r\n      </div>\r\n      <div className=\"analytics-stats-row\">\r\n        <div className=\"analytics-stat-card\">\r\n          <div className=\"stat-value\">{stats.avg}</div>\r\n          <div className=\"stat-label\">Average Value</div>\r\n        </div>\r\n        <div className=\"analytics-stat-card\">\r\n          <div className=\"stat-value\">{stats.peak}</div>\r\n          <div className=\"stat-label\">Peak Value</div>\r\n        </div>\r\n        <div className=\"analytics-stat-card\">\r\n          <div className=\"stat-value\">{stats.alertRate}%</div>\r\n          <div className=\"stat-label\">Alert Rate</div>\r\n        </div>\r\n        <div className=\"analytics-stat-card\">\r\n          <div className=\"stat-value\">{stats.total}</div>\r\n          <div className=\"stat-label\">Total Readings</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"analytics-main-graph\">\r\n        <div className=\"analytics-graph-title\">Sensor Value Timeline</div>\r\n        <Line data={lineData} options={{\r\n          responsive: true,\r\n          plugins: { legend: { labels: { color: '#00fff7' } } },\r\n          scales: {\r\n            x: { title: { display: true, text: 'Time', color: '#00fff7' }, ticks: { color: '#b0eaff' }, grid: { color: 'rgba(0,255,247,0.1)' } },\r\n            y: { title: { display: true, text: 'Sensor Value', color: '#00fff7' }, ticks: { color: '#b0eaff' }, grid: { color: 'rgba(0,255,247,0.1)' } },\r\n          },\r\n        }} />\r\n      </div>\r\n      <div className=\"analytics-bottom-row\">\r\n        <div className=\"analytics-pie\">\r\n          <div className=\"analytics-graph-title\">Status Distribution</div>\r\n          <Doughnut data={getStatusDistribution()} options={{ plugins: { legend: { labels: { color: '#00fff7', font: { size: 14 } } } } }} />\r\n        </div>\r\n        <div className=\"analytics-bar\">\r\n          <div className=\"analytics-graph-title\">Hourly Average Values</div>\r\n          <Bar data={getHourlyAverages()} options={{\r\n            plugins: { legend: { display: false } },\r\n            scales: {\r\n              x: { title: { display: true, text: 'Hour of Day', color: '#00fff7' }, ticks: { color: '#b0eaff' }, grid: { color: 'rgba(0,255,247,0.1)' } },\r\n              y: { title: { display: true, text: 'Avg Value', color: '#00fff7' }, ticks: { color: '#b0eaff' }, grid: { color: 'rgba(0,255,247,0.1)' } },\r\n            },\r\n          }} />\r\n        </div>\r\n      </div>\r\n      <div className=\"analytics-alert-history\">\r\n        <div className=\"analytics-graph-title\">Alert History</div>\r\n        {getAlertHistory().map((alert, i) => (\r\n          <div className=\"analytics-alert-card\" key={i}>\r\n            <span className=\"alert-type\">{alert.type}</span>\r\n            <span className=\"alert-value\">Value: {alert.value} - {alert.time}</span>\r\n            <span className={`alert-level ${alert.level.toLowerCase()}`}>{alert.level}</span>\r\n          </div>\r\n        ))}\r\n        {getAlertHistory().length === 0 && (\r\n          <div className=\"analytics-alert-card\">\r\n            <span className=\"alert-type\">No alerts yet</span>\r\n            <span className=\"alert-value\">System monitoring normally</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}