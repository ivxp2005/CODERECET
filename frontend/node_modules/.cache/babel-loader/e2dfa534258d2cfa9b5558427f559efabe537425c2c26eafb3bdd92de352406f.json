{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\hackathon\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useNavigate } from 'react-router-dom';\nimport 'chart.js/auto';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:5000/api';\nfunction App() {\n  _s();\n  const navigate = useNavigate();\n  const [sensorData, setSensorData] = useState({\n    sensor1: null,\n    sensor2: null,\n    sensor3: null,\n    leak_confirmed: false,\n    burst_confirmed: false,\n    leak_location: null,\n    confidence: 0,\n    correlation_score: 0,\n    stability_score: 0,\n    environmental_noise: false,\n    active_sensors: 0,\n    burst_type: 'NORMAL FLOW',\n    burst_intensity: 0\n  });\n  const [history, setHistory] = useState([]);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [burstBanner, setBurstBanner] = useState(false);\n  const prevBurstRef = useRef(false);\n  const firstFetchRef = useRef(true);\n  const intervalRef = useRef();\n\n  // Fetch latest sensor data and history\n  const fetchData = async () => {\n    try {\n      const statusRes = await fetch(`${API_BASE}/status`);\n      const statusData = await statusRes.json();\n      setSensorData(statusData);\n      setLastUpdated(statusData.timestamp);\n      const historyRes = await fetch(`${API_BASE}/history`);\n      const historyData = await historyRes.json();\n      setHistory(historyData);\n\n      // Show banner on first fetch if burst is ongoing\n      if (firstFetchRef.current) {\n        if (statusData.burst_confirmed) {\n          setBurstBanner(true);\n        }\n        firstFetchRef.current = false;\n      } else {\n        // Show banner only on rising edge (false -> true)\n        if (!prevBurstRef.current && statusData.burst_confirmed) {\n          setBurstBanner(true);\n        }\n      }\n      prevBurstRef.current = statusData.burst_confirmed;\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setSensorData({\n        sensor1: null,\n        sensor2: null,\n        sensor3: null,\n        leak_confirmed: false,\n        burst_confirmed: false,\n        leak_location: null,\n        confidence: 0,\n        correlation_score: 0,\n        stability_score: 0,\n        environmental_noise: false,\n        active_sensors: 0\n      });\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    intervalRef.current = setInterval(fetchData, 2000);\n    return () => clearInterval(intervalRef.current);\n  }, []);\n\n  // Prepare data for Chart.js - show all 3 sensors\n  const filteredHistory = history.filter(item => item.sensor1 >= 0 && item.sensor2 >= 0 && item.sensor3 >= 0);\n  const chartData = {\n    labels: filteredHistory.map(item => new Date(item.timestamp).toLocaleTimeString()),\n    datasets: [{\n      label: 'Sensor 1',\n      data: filteredHistory.map(item => item.sensor1),\n      fill: false,\n      borderColor: '#00fff7',\n      backgroundColor: 'rgba(0,255,247,0.1)',\n      tension: 0.4,\n      pointRadius: 2\n    }, {\n      label: 'Sensor 2',\n      data: filteredHistory.map(item => item.sensor2),\n      fill: false,\n      borderColor: '#ffd700',\n      backgroundColor: 'rgba(255,215,0,0.1)',\n      tension: 0.4,\n      pointRadius: 2\n    }, {\n      label: 'Sensor 3',\n      data: filteredHistory.map(item => item.sensor3),\n      fill: false,\n      borderColor: '#ff8c00',\n      backgroundColor: 'rgba(255,140,0,0.1)',\n      tension: 0.4,\n      pointRadius: 2\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        labels: {\n          color: '#00fff7',\n          font: {\n            size: 12\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Time',\n          color: '#00fff7'\n        },\n        ticks: {\n          color: '#b0eaff'\n        },\n        grid: {\n          color: 'rgba(0,255,247,0.1)'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Sensor Values',\n          color: '#00fff7'\n        },\n        ticks: {\n          color: '#b0eaff'\n        },\n        grid: {\n          color: 'rgba(0,255,247,0.1)'\n        }\n      }\n    }\n  };\n  const leakDetected = sensorData.leak_confirmed;\n  const burstDetected = sensorData.burst_confirmed;\n  const catastrophicDetected = sensorData.burst_type === 'CATASTROPHIC BURST';\n  const handleDismissBurst = () => setBurstBanner(false);\n\n  // Calculate average sensor value\n  const avgSensorValue = sensorData.sensor1 !== null && sensorData.sensor2 !== null && sensorData.sensor3 !== null ? Math.round((sensorData.sensor1 + sensorData.sensor2 + sensorData.sensor3) / 3) : null;\n\n  // Get status color based on burst type\n  const getStatusColor = () => {\n    if (catastrophicDetected) return 'status-catastrophic';\n    if (burstDetected) return 'status-alert';\n    if (leakDetected) return 'status-warning';\n    return 'status-normal';\n  };\n\n  // Get status text based on burst type\n  const getStatusText = () => {\n    if (catastrophicDetected) return 'ÔøΩÔøΩ CATASTROPHIC BURST DETECTED! üö®';\n    if (burstDetected) return '‚ö†Ô∏è PIPELINE BURST';\n    if (leakDetected) return 'üíß PIPELINE LEAK';\n    return '‚úÖ NORMAL FLOW';\n  };\n\n  // Only show the banner if burstBanner is true (do not depend on burstDetected)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-bg\",\n    children: [burstBanner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"burst-banner-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `burst-banner ${catastrophicDetected ? 'catastrophic-banner' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: catastrophicDetected ? 'üö® CATASTROPHIC BURST DETECTED! üö®' : 'üö® BURST DETECTED! üö®'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 16\n          }, this), \" \", sensorData.burst_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 16\n          }, this), \" \", sensorData.leak_location || 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Confidence:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 16\n          }, this), \" \", sensorData.confidence.toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Intensity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 16\n          }, this), \" \", sensorData.burst_intensity.toFixed(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"burst-banner-dismiss\",\n          onClick: handleDismissBurst,\n          children: \"Dismiss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-heading\",\n        children: \"Municipal Pipeline Burst Detection System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-ludo-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ludo-card sensor-values-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"sensor-title\",\n          children: \"Pipeline Sensor Values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sensor-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sensor-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sensor-label\",\n              children: \"Sensor 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sensor-value neon-cyan\",\n              children: sensorData.sensor1 !== null ? sensorData.sensor1 : '--'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sensor-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sensor-label\",\n              children: \"Sensor 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sensor-value neon-yellow\",\n              children: sensorData.sensor2 !== null ? sensorData.sensor2 : '--'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sensor-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sensor-label\",\n              children: \"Sensor 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sensor-value neon-orange\",\n              children: sensorData.sensor3 !== null ? sensorData.sensor3 : '--'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avg-sensor\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avg-label\",\n            children: \"Average\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avg-value neon-yellow\",\n            children: avgSensorValue !== null ? avgSensorValue : '--'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), lastUpdated && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"last-updated\",\n          children: [\"Last updated: \", new Date(lastUpdated).toLocaleString(undefined, {\n            hour12: false\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ludo-card graph-card\",\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: () => navigate('/analytics'),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"chart-title\",\n          children: \"Pipeline Vibration Monitoring (Last 20)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `ludo-card leak-detection-card ${getStatusColor()}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"leak-title\",\n          children: \"Municipal Pipeline Burst Detection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `leak-status ${getStatusColor()}`,\n          children: getStatusText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leak-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Pipeline Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: sensorData.burst_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: sensorData.leak_location || 'No burst detected'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Confidence:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [sensorData.confidence.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Burst Intensity:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: sensorData.burst_intensity.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Correlation Score:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [sensorData.correlation_score, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Stability Score:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [sensorData.stability_score, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Active Sensors:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [sensorData.active_sensors, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), sensorData.environmental_noise && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item warning\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"\\u26A0\\uFE0F Environmental Noise Detected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ludo-card system-status-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"system-title\",\n          children: \"Municipal System Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-label\",\n              children: \"Pipeline Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `status-value ${getStatusColor()}`,\n              children: catastrophicDetected ? 'CATASTROPHIC' : burstDetected ? 'BURST' : leakDetected ? 'LEAK' : 'NORMAL'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-label\",\n              children: \"Signal Quality\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `status-value ${sensorData.correlation_score > 70 ? 'status-good' : 'status-warning'}`,\n              children: sensorData.correlation_score > 70 ? 'GOOD' : 'POOR'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-label\",\n              children: \"Environmental\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `status-value ${sensorData.environmental_noise ? 'status-warning' : 'status-good'}`,\n              children: sensorData.environmental_noise ? 'NOISE' : 'CLEAN'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-label\",\n              children: \"Burst Intensity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `status-value ${sensorData.burst_intensity > 200 ? 'status-catastrophic' : sensorData.burst_intensity > 120 ? 'status-alert' : 'status-normal'}`,\n              children: sensorData.burst_intensity > 200 ? 'HIGH' : sensorData.burst_intensity > 120 ? 'MEDIUM' : 'LOW'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xJIUraVVPmk9CrrrVVhdlc3WgH4=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Line","useNavigate","jsxDEV","_jsxDEV","API_BASE","App","_s","navigate","sensorData","setSensorData","sensor1","sensor2","sensor3","leak_confirmed","burst_confirmed","leak_location","confidence","correlation_score","stability_score","environmental_noise","active_sensors","burst_type","burst_intensity","history","setHistory","lastUpdated","setLastUpdated","burstBanner","setBurstBanner","prevBurstRef","firstFetchRef","intervalRef","fetchData","statusRes","fetch","statusData","json","timestamp","historyRes","historyData","current","err","console","error","setInterval","clearInterval","filteredHistory","filter","item","chartData","labels","map","Date","toLocaleTimeString","datasets","label","data","fill","borderColor","backgroundColor","tension","pointRadius","chartOptions","responsive","plugins","legend","display","color","font","size","scales","x","title","text","ticks","grid","y","leakDetected","burstDetected","catastrophicDetected","handleDismissBurst","avgSensorValue","Math","round","getStatusColor","getStatusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onClick","toLocaleString","undefined","hour12","style","cursor","options","_c","$RefreshReg$"],"sources":["D:/code/hackathon/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useNavigate } from 'react-router-dom';\nimport 'chart.js/auto';\nimport './App.css';\n\nconst API_BASE = 'http://localhost:5000/api';\n\nfunction App() {\n  const navigate = useNavigate();\n  const [sensorData, setSensorData] = useState({\n    sensor1: null,\n    sensor2: null,\n    sensor3: null,\n    leak_confirmed: false,\n    burst_confirmed: false,\n    leak_location: null,\n    confidence: 0,\n    correlation_score: 0,\n    stability_score: 0,\n    environmental_noise: false,\n    active_sensors: 0,\n    burst_type: 'NORMAL FLOW',\n    burst_intensity: 0\n  });\n  const [history, setHistory] = useState([]);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [burstBanner, setBurstBanner] = useState(false);\n  const prevBurstRef = useRef(false);\n  const firstFetchRef = useRef(true);\n  const intervalRef = useRef();\n\n  // Fetch latest sensor data and history\n  const fetchData = async () => {\n    try {\n      const statusRes = await fetch(`${API_BASE}/status`);\n      const statusData = await statusRes.json();\n      setSensorData(statusData);\n      setLastUpdated(statusData.timestamp);\n\n      const historyRes = await fetch(`${API_BASE}/history`);\n      const historyData = await historyRes.json();\n      setHistory(historyData);\n\n      // Show banner on first fetch if burst is ongoing\n      if (firstFetchRef.current) {\n        if (statusData.burst_confirmed) {\n          setBurstBanner(true);\n        }\n        firstFetchRef.current = false;\n      } else {\n        // Show banner only on rising edge (false -> true)\n        if (!prevBurstRef.current && statusData.burst_confirmed) {\n          setBurstBanner(true);\n        }\n      }\n      prevBurstRef.current = statusData.burst_confirmed;\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setSensorData({\n        sensor1: null,\n        sensor2: null,\n        sensor3: null,\n        leak_confirmed: false,\n        burst_confirmed: false,\n        leak_location: null,\n        confidence: 0,\n        correlation_score: 0,\n        stability_score: 0,\n        environmental_noise: false,\n        active_sensors: 0\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    intervalRef.current = setInterval(fetchData, 2000);\n    return () => clearInterval(intervalRef.current);\n  }, []);\n\n  // Prepare data for Chart.js - show all 3 sensors\n  const filteredHistory = history.filter(item => item.sensor1 >= 0 && item.sensor2 >= 0 && item.sensor3 >= 0);\n  const chartData = {\n    labels: filteredHistory.map(item => new Date(item.timestamp).toLocaleTimeString()),\n    datasets: [\n      {\n        label: 'Sensor 1',\n        data: filteredHistory.map(item => item.sensor1),\n        fill: false,\n        borderColor: '#00fff7',\n        backgroundColor: 'rgba(0,255,247,0.1)',\n        tension: 0.4,\n        pointRadius: 2,\n      },\n      {\n        label: 'Sensor 2',\n        data: filteredHistory.map(item => item.sensor2),\n        fill: false,\n        borderColor: '#ffd700',\n        backgroundColor: 'rgba(255,215,0,0.1)',\n        tension: 0.4,\n        pointRadius: 2,\n      },\n      {\n        label: 'Sensor 3',\n        data: filteredHistory.map(item => item.sensor3),\n        fill: false,\n        borderColor: '#ff8c00',\n        backgroundColor: 'rgba(255,140,0,0.1)',\n        tension: 0.4,\n        pointRadius: 2,\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: { \n        display: true,\n        labels: {\n          color: '#00fff7',\n          font: {\n            size: 12\n          }\n        }\n      },\n    },\n    scales: {\n      x: {\n        title: { display: true, text: 'Time', color: '#00fff7' },\n        ticks: { color: '#b0eaff' },\n        grid: { color: 'rgba(0,255,247,0.1)' },\n      },\n      y: {\n        title: { display: true, text: 'Sensor Values', color: '#00fff7' },\n        ticks: { color: '#b0eaff' },\n        grid: { color: 'rgba(0,255,247,0.1)' },\n      },\n    },\n  };\n\n  const leakDetected = sensorData.leak_confirmed;\n  const burstDetected = sensorData.burst_confirmed;\n  const catastrophicDetected = sensorData.burst_type === 'CATASTROPHIC BURST';\n\n  const handleDismissBurst = () => setBurstBanner(false);\n\n  // Calculate average sensor value\n  const avgSensorValue = sensorData.sensor1 !== null && sensorData.sensor2 !== null && sensorData.sensor3 !== null \n    ? Math.round((sensorData.sensor1 + sensorData.sensor2 + sensorData.sensor3) / 3)\n    : null;\n\n  // Get status color based on burst type\n  const getStatusColor = () => {\n    if (catastrophicDetected) return 'status-catastrophic';\n    if (burstDetected) return 'status-alert';\n    if (leakDetected) return 'status-warning';\n    return 'status-normal';\n  };\n\n  // Get status text based on burst type\n  const getStatusText = () => {\n    if (catastrophicDetected) return 'ÔøΩÔøΩ CATASTROPHIC BURST DETECTED! üö®';\n    if (burstDetected) return '‚ö†Ô∏è PIPELINE BURST';\n    if (leakDetected) return 'üíß PIPELINE LEAK';\n    return '‚úÖ NORMAL FLOW';\n  };\n\n  // Only show the banner if burstBanner is true (do not depend on burstDetected)\n  return (\n    <div className=\"dashboard-bg\">\n      {burstBanner && (\n        <div className=\"burst-banner-overlay\">\n          <div className={`burst-banner ${catastrophicDetected ? 'catastrophic-banner' : ''}`}>\n            <h2>{catastrophicDetected ? 'üö® CATASTROPHIC BURST DETECTED! üö®' : 'üö® BURST DETECTED! üö®'}</h2>\n            <p><strong>Type:</strong> {sensorData.burst_type}</p>\n            <p><strong>Location:</strong> {sensorData.leak_location || 'Unknown'}</p>\n            <p><strong>Confidence:</strong> {sensorData.confidence.toFixed(1)}%</p>\n            <p><strong>Intensity:</strong> {sensorData.burst_intensity.toFixed(1)}</p>\n            <button className=\"burst-banner-dismiss\" onClick={handleDismissBurst}>Dismiss</button>\n          </div>\n        </div>\n      )}\n      <header className=\"dashboard-header\">\n        <h1 className=\"dashboard-heading\">Municipal Pipeline Burst Detection System</h1>\n      </header>\n      <div className=\"dashboard-ludo-grid\">\n        {/* Box 1: Individual Sensor Values */}\n        <div className=\"ludo-card sensor-values-card\">\n          <h2 className=\"sensor-title\">Pipeline Sensor Values</h2>\n          <div className=\"sensor-grid\">\n            <div className=\"sensor-item\">\n              <div className=\"sensor-label\">Sensor 1</div>\n              <div className=\"sensor-value neon-cyan\">{sensorData.sensor1 !== null ? sensorData.sensor1 : '--'}</div>\n            </div>\n            <div className=\"sensor-item\">\n              <div className=\"sensor-label\">Sensor 2</div>\n              <div className=\"sensor-value neon-yellow\">{sensorData.sensor2 !== null ? sensorData.sensor2 : '--'}</div>\n            </div>\n            <div className=\"sensor-item\">\n              <div className=\"sensor-label\">Sensor 3</div>\n              <div className=\"sensor-value neon-orange\">{sensorData.sensor3 !== null ? sensorData.sensor3 : '--'}</div>\n            </div>\n          </div>\n          <div className=\"avg-sensor\">\n            <div className=\"avg-label\">Average</div>\n            <div className=\"avg-value neon-yellow\">{avgSensorValue !== null ? avgSensorValue : '--'}</div>\n          </div>\n          {lastUpdated && (\n            <div className=\"last-updated\">Last updated: {new Date(lastUpdated).toLocaleString(undefined, { hour12: false })}</div>\n          )}\n        </div>\n\n        {/* Box 2: Multi-Sensor Graph */}\n        <div className=\"ludo-card graph-card\" style={{ cursor: 'pointer' }} onClick={() => navigate('/analytics')}>\n          <h2 className=\"chart-title\">Pipeline Vibration Monitoring (Last 20)</h2>\n          <Line data={chartData} options={chartOptions} />\n        </div>\n\n        {/* Box 3: Advanced Burst Detection */}\n        <div className={`ludo-card leak-detection-card ${getStatusColor()}`}>\n          <h2 className=\"leak-title\">Municipal Pipeline Burst Detection</h2>\n          <div className={`leak-status ${getStatusColor()}`}>\n            {getStatusText()}\n          </div>\n          \n          <div className=\"leak-details\">\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">Pipeline Status:</span>\n              <span className=\"detail-value\">{sensorData.burst_type}</span>\n            </div>\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">Location:</span>\n              <span className=\"detail-value\">{sensorData.leak_location || 'No burst detected'}</span>\n            </div>\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">Confidence:</span>\n              <span className=\"detail-value\">{sensorData.confidence.toFixed(1)}%</span>\n            </div>\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">Burst Intensity:</span>\n              <span className=\"detail-value\">{sensorData.burst_intensity.toFixed(1)}</span>\n            </div>\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">Correlation Score:</span>\n              <span className=\"detail-value\">{sensorData.correlation_score}%</span>\n            </div>\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">Stability Score:</span>\n              <span className=\"detail-value\">{sensorData.stability_score}%</span>\n            </div>\n            <div className=\"detail-item\">\n              <span className=\"detail-label\">Active Sensors:</span>\n              <span className=\"detail-value\">{sensorData.active_sensors}/3</span>\n            </div>\n            {sensorData.environmental_noise && (\n              <div className=\"detail-item warning\">\n                <span className=\"detail-label\">‚ö†Ô∏è Environmental Noise Detected</span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Box 4: System Status */}\n        <div className=\"ludo-card system-status-card\">\n          <h2 className=\"system-title\">Municipal System Status</h2>\n          <div className=\"status-grid\">\n            <div className=\"status-item\">\n              <div className=\"status-label\">Pipeline Status</div>\n              <div className={`status-value ${getStatusColor()}`}>\n                {catastrophicDetected ? 'CATASTROPHIC' : burstDetected ? 'BURST' : leakDetected ? 'LEAK' : 'NORMAL'}\n              </div>\n            </div>\n            <div className=\"status-item\">\n              <div className=\"status-label\">Signal Quality</div>\n              <div className={`status-value ${sensorData.correlation_score > 70 ? 'status-good' : 'status-warning'}`}>\n                {sensorData.correlation_score > 70 ? 'GOOD' : 'POOR'}\n              </div>\n            </div>\n            <div className=\"status-item\">\n              <div className=\"status-label\">Environmental</div>\n              <div className={`status-value ${sensorData.environmental_noise ? 'status-warning' : 'status-good'}`}>\n                {sensorData.environmental_noise ? 'NOISE' : 'CLEAN'}\n              </div>\n            </div>\n            <div className=\"status-item\">\n              <div className=\"status-label\">Burst Intensity</div>\n              <div className={`status-value ${sensorData.burst_intensity > 200 ? 'status-catastrophic' : sensorData.burst_intensity > 120 ? 'status-alert' : 'status-normal'}`}>\n                {sensorData.burst_intensity > 200 ? 'HIGH' : sensorData.burst_intensity > 120 ? 'MEDIUM' : 'LOW'}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}